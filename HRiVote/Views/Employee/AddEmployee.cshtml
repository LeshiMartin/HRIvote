@model HRiVote.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "AddEmployee";
}
<div class="container Back col-sm-offset-1">
    <h2>AddEmployee</h2>


    @using (Html.BeginForm("Save", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.employee.ID)

        <div class="form-horizontal">
            <h4>Employee</h4>
            <hr />
            @Html.ValidationSummary(true, "Please fix the following issues:", new { @class = "text-danger" })

            @Html.ActionLink("Add a new Job Possition", "AddPosition","Posstions", new { id = 1 }, new { @class = "btn btn-primary fa fa-pencil" })
            <div class="form-group">
                @Html.LabelFor(model => model.employee.JobPositionID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.employee.JobPositionID, new SelectList(Model.positions, "ID", "Title"), "---Select---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.employee.JobPositionID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.skils, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBox("skills",new SelectList(Model.skils,"ID","Skill"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.employee.JobPositionID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.employee.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.employee.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <i class="fa fa-calendar">@Html.EditorFor(model => model.employee.BirthDate, new { htmlAttributes = new { @class = "form-control" } })</i> 
                    @Html.ValidationMessageFor(model => model.employee.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.employee.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.employee.IsAvailable)
                        @Html.ValidationMessageFor(model => model.employee.IsAvailable, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.employee.VacationDays, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(x => x.employee.VacationDays, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.VacationDays, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.employee.Achievements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.employee.Achievements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.Achievements, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.employee.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.employee.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.CV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <i class="fa fa-cloud-upload"></i>
                    <input type="file" class="btn " id="file" name="file" value="Search" />
                    @Html.ValidationMessageFor(model => model.employee.CV, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.employee.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <i class="fa fa-cloud-upload"></i>
                    <input type="file" class="btn " id="file1" name="file1" value="Search" />
                    @Html.ValidationMessageFor(model => model.employee.Photo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2  col-md-10 ">
                    <input type="submit" value="Create" class="btn btn-default btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary fa fa-backward" })
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
