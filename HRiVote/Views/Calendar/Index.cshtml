<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<link href="~/Content/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
@model HRiVote.ViewModels.CalendarViewModel
<div id="calendar" class="col-sm-10 col-sm-offset-2">
    <div id="modal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button"class="close"data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><span id="eventTitle"></span></h4>
                </div>
                <div class="modal-body">
                    <p id="pDetails"></p>
                    <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                        <span class="glyphicon glyphicon-remove"></span> Remove
                    </button>
                    <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                        <span class="glyphicon glyphicon-pencil"></span> Edit
                    </button>
                    
                  @*@Html.ActionLink("Edit", "Edit",new { onClick = "get" })*@
                </div>
                <div class="modal-footer">
                    
                    <button type="button"class="btn btn-default"data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="dropdown">
                            @Html.DropDownListFor(x=>x.Calendar.EmployeeID,new SelectList(Model.Employes,"ID","FullName"),"---select an Employee---",new { @class="form-control"})
                        </div>
                    </div>
                    <div class="form-group" id="divEndDate" style="display:none">
                        <label>End</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Theme Color</label>
                        <select id="ddThemeColor" class="form-control">
                            <option value="">Default</option>
                            <option value="red">Red</option>
                            <option value="blue">Blue</option>
                            <option value="black">Black</option>
                            <option value="green">Green</option>
                        </select>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>
@section scripts{

<script src="~/Scripts/moment-with-locales.min.js"></script>
<script src="~/Scripts/fullcalendar.js"></script>
<script src="~/Scripts/lib/jquery-ui.min.js"></script>
<script src="~/Scripts/fullcalendar.min.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var events = [];
            var selected = null;
            FetchEventAndRenderCalendar();
            function FetchEventAndRenderCalendar() {
                $.ajax({
                    type: "GET",
                    url: "/Calendar/GetData",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            //$Opis.append("<p/>").html(v.Title /*+ "<b> till :</b>" + v.EndOfVacation != null ? moment(v.EndOfVacation) : null*/);
                            $id = v.Id;
                            events.push({
                                empid:v.EmployeeID,
                                eventId: v.Id,
                                title: v.Title,
                                start: moment(v.StartOfVacation),
                                description: v.Description,
                                color: v.Color
                            });
                        })
                        GenerateCalendar(events);
                    },
                    error: function (error) {
                        alert("Failed");
                    }

                })

            }
            function GenerateCalendar(events) {
                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    contentHeight: 600,
                    default: "30%",
                    defaultDate: new Date(),
                    timeFormat: 'H(:mm)',
                    header: {
                        left: 'prev,next today',
                        center: 'Calendar',
                        right:'month, basicweek,basicday,agenda'
                    },
                    eventLimit: true,
                    events: events,
                    eventClick: function (calEvent, jsEvent, view) {
                        selected = calEvent;
                        $("#modal #eventTitle").text(calEvent.title)
                        var $description = $('<div/>');
                        $description.append($("<p/>").html('<b> Start :</b>' + calEvent.start.format(" DD-MMM-YYYY")));
                        //$description.append($("<p/>").html('<b>End :</b>'+calEvent.end.format(" DD-MMM-YYYY")));
                        $description.append($("<p/>").html('<b> Description : </b>' + calEvent.description));
                        $("#modal pDetails").empty().html($description);
                        //alert(calEvent.start);
                        $('#pDetails').html($description);
                        $("#btn").val($id);
                        $("#modal").modal();
                    },
                    //selectable: true,
                    //select: function (start, end) {
                    //    selectedEvent = {
                    //        eventID: 0,
                    //        title: '',
                    //        description: '',
                    //        start: start,
                    //        end: end,
                    //        color: '',
                    //        empid:0
                    //    };
                    //    openAddEditForm();
                    //    $('#calendar').fullCalendar('unselect');
                    //},
                    //editable: true,
                    //eventDrop: function (event) {
                    //    var data = {
                    //        EventID: event.eventID,
                    //        Subject: event.title,
                    //        Start: event.start.format('DD/MM/YYYY HH:mm A'),
                    //        End: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                    //        Description: event.description,
                    //        ThemeColor: event.color,
                    //        IsFullDay: event.allDay
                    //    };
                    //    SaveEvent(data);
                    //}
                })
            }
            $('#btnEdit').click(function get() {
                //Open modal dialog for edit event
                if (selected != null) {
                    $.ajax({
                        type: "GET",
                        url: '/Calendar/Edit',
                        data: { 'id': selected.eventId },
                        traditional: true                        
                    });
                }
                
            });
            })
            $('#btnDelete').click(function () {
                if (selected != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: "POST",
                        url: '/Calendar/DeleteEvent',
                        data: { 'eventID': selected.eventId },
                        success: function (data) {
                            $('#myModal').modal('hide');
                            FetchEventAndRenderCalendar();
                        },
                        error: function () {
                            alert('Failed');
                        }
                    })
                }
            })
            function openAddEditForm() {
                if (selected != null) {
                    $('#hdEventID').val(selected.eventID);
                    $('#txtSubject').val(selected.title);
                    $('#txtStart').val(selected.start.format('DD/MM/YYYY HH:mm A'));
                    $('#txtIsEmployeeID').val(selected.empid)
                    $('#txtEnd').val(selected.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                    $('#txtDescription').val(selected.description);
                    $('#ddThemeColor').val(selected.color);
                }
                $('#modal').modal();
                $('#myModalSave').modal('hide');
            }
            $('#btnSave').click(function () {
                //Validation/
                if ($('#txtSubject').val().trim() == "") {
                    alert('Subject required');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Start date required');
                    return;
                }
                if ($('#chkIsEmployeeID').val().trim() == "") {
                    alert('Employee required');
                    return;
                }
                else {
                    var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid end date');
                        return;
                    }
                }

                var data = {
                    EventID: $('#hdEventID').val(),
                    Subject: $('#txtSubject').val().trim(),
                    Start: $('#txtStart').val().trim(),
                    End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    ThemeColor: $('#ddThemeColor').val(),
                    empid: $('#chkIsEmployeeID').val().trim()
                }
                SaveEvent(data);
                // call function for submit data to the server
            })
            function SaveEvent(data) {
                $.ajax({
                    type: "POST",
                    url: '/home/SaveEvent',
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                })
            }

    </script>

 }