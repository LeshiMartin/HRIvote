@model HRiVote.Models.OpenPosition
<div class="container Back col-sm-offset-1" style="border: solid transparent;border-radius: 20px;">
    @using (Html.BeginForm("Save","OpenJobPossitions",FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>OpenPosition</h4>
            @Html.HiddenFor(x=>x.ID)
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            @if (Model.ID>0)
            {
                <div >
                    @Html.Label("Previous Date of Job Openning", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("date",Model.StartOfJobOpenning ,  new { @class = "form-control",@readonly=true })
                        @Html.ValidationMessageFor(model => model.StartOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br /><br /><br />
                <div class="form-group">
                    @Html.LabelFor(model => model.StartOfJobOpenning, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartOfJobOpenning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    @Html.Label("Previous Date of Job Clossing", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("date1", Model.EndOfJobOpenning, new { @class = "form-control", @readonly = true })
                        @Html.ValidationMessageFor(model => model.StartOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br /><br /><br />
                <div class="form-group">
                    @Html.LabelFor(model => model.EndOfJobOpenning, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndOfJobOpenning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.StartOfJobOpenning, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartOfJobOpenning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EndOfJobOpenning, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndOfJobOpenning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndOfJobOpenning, "", new { @class = "text-danger" })
                    </div>
                </div>

            }






            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index","",new { @class = "btn btn-primary fa fa-backward"})
    </div>
</div>