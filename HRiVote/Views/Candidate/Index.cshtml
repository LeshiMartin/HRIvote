@model HRiVote.ViewModels.CanddateViewModel

@{
    ViewBag.Title = "Index";
}

<div class="container Back col-sm-offset-1" >
    <h2 class="col-md-6 col-md-offset-5" >List of Candidates</h2>
    @ViewBag.Error
    <p class="col-md-2">
        @Html.ActionLink(" CreateNew", "Create", null, new { @class = "btn btn-primary glyphicon glyphicon-pencil" })
    </p>  
        @Html.ValidationSummary() 
    <div class="form-group">
        <table id="myTable" class="table table-hover table-bordered table-responsive">
            <thead>
                <tr>

                    <th>
                        Last Name
                    </th>
                    <th>
                        First Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>
                        Phone Number
                    </th>
                    <th>
                        CV
                    </th>
                    <th>
                        Interview Date
                    </th>
                    <th>
                        Interview Time
                    </th>
                    <th>
                        Interview Round
                    </th>
                    <th>Action Links</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model.Candidate)
                {
                    if (Model.cans != null)
                    {

                        foreach (var tag in Model.cans)
                        {


                            <tr >
                                @if (item.ID == tag.ID)
                                {
                                    using (Html.BeginForm("IndexPost", "Candidate", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {
                                        @Html.HiddenFor(x => item.ID)
                                        @Html.AntiForgeryToken()
                                        <td>
                                            @Html.EditorFor(modelItem => item.LastName)
                                        </td>
                                        <td>
                                            @Html.EditorFor(modelItem => item.FirstName)
                                        </td>
                                        <td>
                                            @Html.EditorFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            @Html.EditorFor(modelItem => item.PhoneNumber)
                                        </td>
                                        <td>
                                            <input type="file" name="file" />
                                        </td>
                                        <td>
                                            @Html.EditorFor(x => item.InterviewDate)
                                        </td>
                                        <td>
                                            @Html.EditorFor(x => item.InterviewTime)
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(modelItem => item.InterviewRound, new List<SelectListItem> {
                                                                  new SelectListItem{Text="First Round", Value="1", Selected=true},
                                                                  new SelectListItem{Text="Second Round", Value="2"},
                                                                  new SelectListItem{Text="Third Round", Value="3"}
                                                                  }, htmlAttributes: new { @class = "form-control" })
                                        </td>
                                        <td>
                                            <input type="submit" class="btn btn-success js-success" data-project-id="" value="Update" />
                                            @Html.ActionLink(" Return", "Index", null, new { @class = "btn btn-primary fa fa-backward" })
                                        </td>
                                       
                                    }
                                }
                                else
                                {
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LastName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FirstName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                    </td>
                                    <td>
                                        @if (item.CV == "Cv not Uploaded")
                                        {
                                            @Html.DisplayFor(x => item.CV)
                                        }
                                        else
                                        {
                                            <img src="@Url.Content(item.CV)" alt="@Html.DisplayFor(x => item.CV)" width="100" />
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.InterviewDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(x => item.InterviewTime)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.InterviewRound)
                                    </td>
                                    <td>
                                        @Html.ActionLink(" Details", "Index", new { candidateid = item.ID }, new { @class = "btn btn-info glyphicon glyphicon-info-sign" })<br />
                                        @Html.ActionLink(" Edit", "Index", new { updateid = item.ID }, new { @class = "btn btn-primary glyphicon glyphicon-pencil" })         <br />
                                        <button class="btn btn-danger btn-sm btn-group-sm glyphicon glyphicon-trash js-delete" type="button" data-project-id="@item.ID"> Delete</button>

                                    </td>
                                }
                            </tr>

                        }
                    }
                    else
                    {

                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @if (item.CV == "Cv not Uploaded")
                                {
                                    @Html.DisplayFor(x => item.CV)
                                }
                                else
                                {
                                    <img src="@Url.Content(item.CV)" alt="@Html.DisplayFor(x => item.CV)" width="100" />
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InterviewDate)
                            </td>
                            <td>
                                @Html.DisplayFor(x => item.InterviewTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.InterviewRound)
                            </td>
                            <td>
                                @Html.ActionLink(" Details", "Index", new { candidateid = item.ID }, new { @class = "btn btn-info glyphicon glyphicon-info-sign", @id = "btn" })     <br />
                                @Html.ActionLink(" Edit", "Index", new { updateid = item.ID }, new { @class = "btn btn-primary glyphicon glyphicon-pencil" })              <br />
                                <button class="btn btn-danger btn-sm btn-group-sm glyphicon glyphicon-trash js-delete" type="button" data-project-id="@item.ID"> Delete</button>
                            </td>
                        </tr>

                    }
                }
            </tbody>
            
        </table>

    </div>

</div>
<br />
<br />
@if (Model.candidate != null)
{
  @Html.HiddenFor(x => x.candidate.ID, new { @id="id"})
    <div class="container col-sm-offset-1">
        <div id="modal" class="modal" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="border:solid 1px black;">
                        <h2>Details</h2>
                        <h4>Candidate</h4>
                    </div>
                    <div class="modal-body" style="font-size:15px !important;">
                        @Html.Partial("_PartialCandidateView", Model.candidate)
                        </div>
                    </div>
                    </div>
                </div>
            </div>

            }
            @section scripts{
            
                
                <script>
                    $(document).ready(function () {
                        var id = document.getElementById("id")
                        if (id != null) {
                            $("#modal").show();
                        }
                        $('#myTable').DataTable();

                        $("#myTable").on("click", ".js-delete", function () {
                            var self = $(this);
                            var dialog = bootbox.dialog({
                                title: 'Remove',
                                message: "<p>Are you sure you want to remove it</p>",
                                buttons: {
                                    no: {
                                        label: "Cancel",
                                        className: 'btn1 btn-default',
                                        callback: function () {
                                            dialog.modal('hide')
                                        }
                                    },
                                    ok: {
                                        label: "Yes",
                                        className: 'btn1 btn-danger',
                                        callback: function () {
                                            $.ajax({
                                                url: "/api/Candidate/" + self.attr("data-project-id"),
                                                method: "DELETE",
                                                success: function () {
                                                    self.parents("tr").remove();
                                                }
                                            })

                                        }
                                    }
                                }
                            });
                        });
                    });
                </script>
            }

